# Generated by Django 5.2.6 on 2025-09-09 03:02

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_start', models.IntegerField(help_text='e.g., 2024 for 2024-2025')),
                ('year_end', models.IntegerField(help_text='e.g., 2025 for 2024-2025')),
                ('is_current', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-year_start'],
                'unique_together': {('year_start', 'year_end')},
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='e.g., CS, IT, ENG', max_length=10, unique=True)),
                ('name', models.CharField(help_text='e.g., Computer Science', max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('head_of_department', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'teacher'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='headed_departments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Curriculum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='e.g., BSCS2024, BSIT2023', max_length=20, unique=True)),
                ('name', models.CharField(help_text='e.g., Bachelor of Science in Computer Science', max_length=100)),
                ('year_introduced', models.IntegerField()),
                ('total_units', models.PositiveIntegerField()),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='curricula', to='courses.department')),
            ],
            options={
                'verbose_name_plural': 'Curricula',
                'ordering': ['department', '-year_introduced', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='e.g., CS101, MATH101', max_length=20, unique=True)),
                ('title', models.CharField(help_text='e.g., Introduction to Programming', max_length=200)),
                ('description', models.TextField(blank=True)),
                ('units', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)])),
                ('course_type', models.CharField(choices=[('core', 'Core/Major'), ('general', 'General Education'), ('elective', 'Elective'), ('practicum', 'Practicum/OJT'), ('thesis', 'Thesis/Capstone')], default='core', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('prerequisites', models.ManyToManyField(blank=True, related_name='prerequisite_for', to='courses.course')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='courses.department')),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(choices=[('1st', '1st Semester'), ('2nd', '2nd Semester'), ('summer', 'Summer')], max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='semesters', to='courses.academicyear')),
            ],
            options={
                'ordering': ['academic_year', 'semester'],
                'unique_together': {('academic_year', 'semester')},
            },
        ),
        migrations.CreateModel(
            name='EnrollmentPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Regular Enrollment, Late Enrollment', max_length=100)),
                ('student_category', models.CharField(choices=[('all', 'All Students'), ('regular', 'Regular Students'), ('irregular', 'Irregular Students'), ('transferee', 'Transferees'), ('new', 'New Students'), ('senior', 'Senior Students')], default='all', max_length=20)),
                ('year_levels', models.CharField(blank=True, help_text='Comma-separated year levels: 1,2,3,4 or leave blank for all', max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('priority_order', models.PositiveIntegerField(default=1, help_text='Lower numbers have higher priority')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollment_periods', to='courses.semester')),
            ],
            options={
                'ordering': ['semester', 'priority_order', 'start_date'],
            },
        ),
        migrations.CreateModel(
            name='CourseOffering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(help_text='e.g., A, B, C, 1A, 2B', max_length=10)),
                ('schedule', models.TextField(help_text='e.g., MWF 9:00-10:00 AM, TTh 1:00-2:30 PM')),
                ('room', models.CharField(blank=True, help_text='e.g., Room 301, Lab A', max_length=50)),
                ('max_students', models.PositiveIntegerField(default=40)),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('open', 'Open for Enrollment'), ('closed', 'Enrollment Closed'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planning', max_length=20)),
                ('enrollment_start', models.DateTimeField(blank=True, null=True)),
                ('enrollment_end', models.DateTimeField(blank=True, null=True)),
                ('class_start', models.DateField(blank=True, null=True)),
                ('class_end', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offerings', to='courses.course')),
                ('instructor', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'teacher'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taught_courses', to=settings.AUTH_USER_MODEL)),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_offerings', to='courses.semester')),
            ],
            options={
                'ordering': ['semester', 'course__code', 'section'],
                'unique_together': {('course', 'semester', 'section')},
            },
        ),
        migrations.CreateModel(
            name='CurriculumCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_level', models.IntegerField(choices=[(1, '1st Year'), (2, '2nd Year'), (3, '3rd Year'), (4, '4th Year'), (5, '5th Year')])),
                ('semester', models.CharField(choices=[('1st', '1st Semester'), ('2nd', '2nd Semester'), ('summer', 'Summer')], max_length=10)),
                ('is_required', models.BooleanField(default=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_curricula', to='courses.course')),
                ('curriculum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='curriculum_courses', to='courses.curriculum')),
            ],
            options={
                'ordering': ['year_level', 'semester', 'course__code'],
                'unique_together': {('curriculum', 'course')},
            },
        ),
        migrations.CreateModel(
            name='StudentCurriculum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_started', models.IntegerField()),
                ('current_year_level', models.IntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('assigned_by', models.ForeignKey(blank=True, limit_choices_to={'is_staff': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='curriculum_assignments_made', to=settings.AUTH_USER_MODEL)),
                ('curriculum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_assignments', to='courses.curriculum')),
                ('student', models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='curriculum_assignments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-assigned_at'],
                'unique_together': {('student', 'curriculum')},
            },
        ),
        migrations.CreateModel(
            name='StudentEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('enrolled', 'Enrolled'), ('waitlisted', 'Waitlisted'), ('dropped', 'Dropped'), ('failed', 'Failed'), ('passed', 'Passed'), ('incomplete', 'Incomplete')], default='pending', max_length=20)),
                ('enrollment_type', models.CharField(choices=[('regular', 'Regular Enrollment'), ('late', 'Late Enrollment'), ('cross_enrollment', 'Cross Enrollment'), ('makeup', 'Make-up Class'), ('overload', 'Overload')], default='regular', max_length=20)),
                ('midterm_grade', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('final_grade', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, limit_choices_to={'user_type__in': ['teacher', 'admin']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_enrollments', to=settings.AUTH_USER_MODEL)),
                ('course_offering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='courses.courseoffering')),
                ('student', models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-enrolled_at'],
                'unique_together': {('student', 'course_offering')},
            },
        ),
    ]
