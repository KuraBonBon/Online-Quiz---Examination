# Generated by Django 5.2.6 on 2025-09-11 17:01

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_name', models.CharField(max_length=100)),
                ('metric_value', models.FloatField()),
                ('metric_data', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('student_performance', 'Student Performance Report'), ('teacher_activity', 'Teacher Activity Report'), ('assessment_statistics', 'Assessment Statistics'), ('course_enrollment', 'Course Enrollment Report'), ('system_usage', 'System Usage Report'), ('grade_distribution', 'Grade Distribution Report')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('report_data', models.JSONField()),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('is_scheduled', models.BooleanField(default=False)),
                ('schedule_frequency', models.CharField(blank=True, max_length=20)),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('widget_type', models.CharField(choices=[('chart', 'Chart Widget'), ('metric', 'Metric Widget'), ('list', 'List Widget'), ('progress', 'Progress Widget'), ('calendar', 'Calendar Widget')], max_length=20)),
                ('title', models.CharField(max_length=100)),
                ('configuration', models.JSONField(default=dict)),
                ('position_x', models.PositiveIntegerField(default=0)),
                ('position_y', models.PositiveIntegerField(default=0)),
                ('width', models.PositiveIntegerField(default=1)),
                ('height', models.PositiveIntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['position_y', 'position_x'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('user', 'User Performance'), ('course', 'Course Performance'), ('assessment', 'Assessment Performance'), ('system', 'System Performance')], max_length=20)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('metric_name', models.CharField(max_length=100)),
                ('metric_value', models.FloatField()),
                ('additional_data', models.JSONField(blank=True, default=dict)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['metric_type', 'object_id'], name='analytics_p_metric__c32736_idx'), models.Index(fields=['user', 'metric_name'], name='analytics_p_user_id_03d0ac_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('login', 'User Login'), ('logout', 'User Logout'), ('assessment_create', 'Assessment Created'), ('assessment_start', 'Assessment Started'), ('assessment_complete', 'Assessment Completed'), ('question_add', 'Question Added'), ('course_enroll', 'Course Enrollment'), ('grade_view', 'Grade Viewed'), ('profile_update', 'Profile Updated')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'action_type'], name='analytics_u_user_id_c9b49e_idx'), models.Index(fields=['timestamp'], name='analytics_u_timesta_412843_idx')],
            },
        ),
    ]
