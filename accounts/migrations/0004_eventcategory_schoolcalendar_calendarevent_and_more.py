# Generated by Django 5.2.6 on 2025-10-02 09:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0003_alter_useractivitylog_options_and_more'),
        ('assessments', '0005_add_grading_fields'),
        ('courses', '0002_enrollmentcode_enrollmentcodeusage_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('color', models.CharField(default='#004d40', help_text='Hex color code', max_length=7)),
                ('icon', models.CharField(default='fas fa-calendar', help_text='FontAwesome icon class', max_length=50)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Event Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SchoolCalendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='SPIST Academic Calendar', max_length=100)),
                ('academic_year', models.CharField(help_text='e.g., 2024-2025', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-academic_year'],
            },
        ),
        migrations.CreateModel(
            name='CalendarEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('event_type', models.CharField(choices=[('academic', 'Academic'), ('examination', 'Examination'), ('assessment', 'Assessment'), ('holiday', 'Holiday'), ('meeting', 'Meeting'), ('activity', 'School Activity'), ('deadline', 'Deadline'), ('other', 'Other')], default='other', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('is_all_day', models.BooleanField(default=False)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('meeting_link', models.URLField(blank=True, help_text='Online meeting link if applicable')),
                ('audience', models.CharField(choices=[('all', 'Everyone'), ('students', 'Students Only'), ('teachers', 'Teachers Only'), ('admin', 'Admin Only'), ('specific', 'Specific Groups')], default='all', max_length=20)),
                ('specific_year_levels', models.CharField(blank=True, help_text='Comma-separated: 1,2,3,4', max_length=50)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('is_published', models.BooleanField(default=True)),
                ('is_recurring', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('send_notifications', models.BooleanField(default=True)),
                ('notification_days', models.PositiveIntegerField(default=1, help_text='Days before event to send notification')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_events', to=settings.AUTH_USER_MODEL)),
                ('linked_assessment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='calendar_events', to='assessments.assessment')),
                ('specific_courses', models.ManyToManyField(blank=True, related_name='calendar_events', to='courses.course')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='accounts.eventcategory')),
            ],
            options={
                'ordering': ['start_date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='EventReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_date', models.DateTimeField()),
                ('is_sent', models.BooleanField(default=False)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='accounts.calendarevent')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_reminders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['reminder_date'],
            },
        ),
        migrations.CreateModel(
            name='UserCalendarSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_view', models.CharField(choices=[('month', 'Month View'), ('week', 'Week View'), ('day', 'Day View'), ('agenda', 'Agenda View')], default='month', max_length=20)),
                ('email_notifications', models.BooleanField(default=True)),
                ('browser_notifications', models.BooleanField(default=True)),
                ('notification_time', models.TimeField(default='09:00', help_text='Preferred time for daily notifications')),
                ('show_weekends', models.BooleanField(default=True)),
                ('start_week_on_monday', models.BooleanField(default=True)),
                ('show_event_details', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hidden_categories', models.ManyToManyField(blank=True, related_name='hidden_by_users', to='accounts.eventcategory')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='calendar_settings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='calendarevent',
            index=models.Index(fields=['start_date', 'end_date'], name='accounts_ca_start_d_9908f5_idx'),
        ),
        migrations.AddIndex(
            model_name='calendarevent',
            index=models.Index(fields=['event_type', 'is_published'], name='accounts_ca_event_t_39dc99_idx'),
        ),
        migrations.AddIndex(
            model_name='calendarevent',
            index=models.Index(fields=['audience', 'is_published'], name='accounts_ca_audienc_0b784c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='eventreminder',
            unique_together={('event', 'user')},
        ),
    ]
